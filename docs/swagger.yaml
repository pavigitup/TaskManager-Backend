openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: API for managing users, tasks, and comments

servers:
  - url: http://localhost:8001/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterUser:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [admin, user]

    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    Task:
      type: object
      required:
        - title
        - description
        - assignee
        - dueDate
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in-progress, completed]
        priority:
          type: string
          enum: [low, medium, high]
        assignee:
          type: string
        dueDate:
          type: string
          format: date

    Comment:
      type: object
      required:
        - content
      properties:
        content:
          type: string

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: User registered
        '400':
          description: Invalid input or user exists

  /auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /auth/me:
    get:
      summary: Get current logged in user
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
        '401':
          description: Unauthorized

  /auth/users:
    get:
      summary: Get list of users (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: List of users
        '403':
          description: Forbidden

  /tasks:
    get:
      summary: Get list of tasks
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: assignee
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: List of tasks

    post:
      summary: Create a new task
      tags: [Tasks]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created
        '403':
          description: Permission denied

  /tasks/{id}:
    put:
      summary: Update a task
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated
        '404':
          description: Task not found

    delete:
      summary: Delete a task
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task deleted
        '403':
          description: Permission denied

  /tasks/{id}/comments:
    get:
      summary: Get comments for a task
      tags: [Comments]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of comments
        '403':
          description: Permission denied

    post:
      summary: Add comment to a task
      tags: [Comments]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comment added
        '403':
          description: Permission denied
